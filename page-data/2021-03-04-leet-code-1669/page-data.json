{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-03-04-leet-code-1669/","result":{"data":{"site":{"siteMetadata":{"title":"Hyojing"}},"markdownRemark":{"id":"2bbd2b7f-69a7-5731-9a67-e037a78bd14d","excerpt":"Merge In Between Linked Lists Merge In Between Linked Lists","html":"<h1>Merge In Between Linked Lists</h1>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">mergeInBetween</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> list1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ListNode</span> list2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ListNode</span> temp <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ListNode</span> list2LastNode <span class=\"token operator\">=</span> list2<span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>list2LastNode<span class=\"token punctuation\">.</span>next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            list2LastNode <span class=\"token operator\">=</span> list2LastNode<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ListNode</span> removeStart <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ListNode</span> removeEnd <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                removeStart <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                removeEnd <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            temp <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n            index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        removeStart<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> list2<span class=\"token punctuation\">;</span>\n        list2LastNode<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> removeEnd<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> list1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://leetcode.com/problems/merge-in-between-linked-lists/\">Merge In Between Linked Lists</a></p>","frontmatter":{"title":"Merge In Between Linked Lists","date":"July 27, 2020","description":"LeetCode"}}},"pageContext":{"slug":"/2021-03-04-leet-code-1669/","previous":null,"next":{"fields":{"slug":"/2021-03-22-leet-code-1381/"},"frontmatter":{"title":"Design a Stack With Increment Operation"}}}},"staticQueryHashes":["1246554614","2841359383"]}